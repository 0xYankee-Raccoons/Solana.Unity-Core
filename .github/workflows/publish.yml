name: Build, Pack & Publish

on:
  push:
    branches:
      - master # Default release branch
jobs:
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    steps:
      - name: Get the sources
        uses: actions/checkout@v2
      - name: Extract release notes
        run: |
            git log --pretty=format:'%s' ${GITHUB_REF} | perl -pe 's| \(.*tag: v(\d+.\d+.\d+(-preview\d{3})?)(, .*?)*\)|\n## \1\n|g' > RELEASE-NOTES.txt
      - name: Run the build script
        uses: cake-build/cake-action@v1
        with:
          script-path: build.cake
          target: Pack
          cake-bootstrap: true
      - name: Publish Solnet.Unity.Extensions on version change
        uses: bmresearch/publish-nuget@master
        with:
          PROJECT_FILE_PATH: src/Solnet.Unity.Extensions/Solnet.Unity.Extensions.csproj
          PACKAGE_NAME: Solnet.Unity.Extensions
          VERSION_FILE_PATH: SharedBuildProperties.props
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          TAG_FORMAT: v*
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
      - name: Publish Solnet.Unity.Wallet on version change
        uses: bmresearch/publish-nuget@master
        with:
          PROJECT_FILE_PATH: src/Solnet.Unity.Wallet/Solnet.Unity.Wallet.csproj
          PACKAGE_NAME: Solnet.Unity.Wallet
          VERSION_FILE_PATH: SharedBuildProperties.props
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          TAG_FORMAT: v*
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
      - name: Publish Solnet.Unity.Rpc on version change
        uses: bmresearch/publish-nuget@master
        with:
          PROJECT_FILE_PATH: src/Solnet.Unity.Rpc/Solnet.Unity.Rpc.csproj
          PACKAGE_NAME: Solnet.Unity.Rpc
          VERSION_FILE_PATH: SharedBuildProperties.props
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          TAG_FORMAT: v*
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
      - name: Publish Solnet.Unity.KeyStore on version change
        uses: bmresearch/publish-nuget@master
        with:
          PROJECT_FILE_PATH: src/Solnet.Unity.KeyStore/Solnet.Unity.KeyStore.csproj
          PACKAGE_NAME: Solnet.Unity.KeyStore
          VERSION_FILE_PATH: SharedBuildProperties.props
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          TAG_FORMAT: v*
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
      - name: Publish Solnet.Unity.Programs on version change
        id: publish_nuget
        uses: bmresearch/publish-nuget@master
        with:
          PROJECT_FILE_PATH: src/Solnet.Unity.Programs/Solnet.Unity.Programs.csproj
          PACKAGE_NAME: Solnet.Unity.Programs
          VERSION_FILE_PATH: SharedBuildProperties.props
          VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          TAG_FORMAT: v*
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.publish_nuget.outputs.VERSION }}
          release_name: ${{ steps.publish_nuget.outputs.VERSION }}
          body_path: RELEASE-NOTES.txt
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Upload Solnet.Unity.Extensions release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: artifacts/Solnet.Unity.Extensions.dll
          tag: ${{ steps.publish_nuget.outputs.VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Solnet.Unity.Wallet release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: artifacts/Solnet.Unity.Wallet.dll
          tag: ${{ steps.publish_nuget.outputs.VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Solnet.Unity.Rpc release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: artifacts/Solnet.Unity.Rpc.dll
          tag: ${{ steps.publish_nuget.outputs.VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Solnet.Unity.KeyStore release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: artifacts/Solnet.Unity.KeyStore.dll
          tag: ${{ steps.publish_nuget.outputs.VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Solnet.Unity.Programs release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: artifacts/Solnet.Unity.Programs.dll
          tag: ${{ steps.publish_nuget.outputs.VERSION }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
